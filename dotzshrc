# vim: set filetype=zsh:

# oh-my-zsh
export DEFAULT_USER=immanuel
ZSH=/usr/share/oh-my-zsh
ZSH_CACHE_DIR="/tmp/zsh_cache"
ZSH_THEME="agnoster"
DISABLE_AUTO_UPDATE="true"
plugins=(git git-extras gitfast themes archlinux battery cp history compleat)
source $ZSH/oh-my-zsh.sh

export ANDROID_HOME=/opt/android-sdk
alias uni='cd /home/immanuel/Documents/University/'

# extended output for `time' command
TIMEFMT='%J   %U  user %S system %P cpu %*E total'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M MB'$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'


# NeoVim & VIm
alias n='nvim'
alias nsu='sudo -E nvim'
alias visu='sudo -E vim'

# Git
alias glg='git lg'
alias gst='git st'
alias gg='git get'
alias gdx='git dx'

# Zathura
alias zathura='/usr/bin/zathura --fork > /dev/null 2>&1'
alias z='zathura'

# Others
alias sxiv='sxiv-rifle'
alias py=python3
alias weather='curl -4 www.wttr.in'

function pfind() {
    ps wwup `pgrep "$1"`
}


# extended `lsblk'
alias lsblk='lsblk -o SIZE,NAME,VENDOR,MODEL,LABEL,FSTYPE,RO,TYPE,MOUNTPOINT,UUID'


# useful `youtube-dl' flags
function ytdl() {
    youtube-dl -v --yes-playlist -o '%(title)s.%(ext)s' -x --audio-quality 0 --add-metadata --metadata-from-title '%(artist)s - %(title)s' "$@"
}

function pdfmerge() {
    TARGET=$1
    shift
    # to fix the size of the resulting pages use
    # -dDEVICEWIDTHPOINTS=<W> in pixels
    # -dDEVICEHEIGHTPOINTS=<H> in pixels
    # -dPDFFitPage
    gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile="$TARGET" "$@"
}

# send notification when program terminates
function notify() {
    $*; notify-send "Task done." "Executed '$*'.\nreturn code: $?"
}


# colorize SVN
function svn {
# Skip the color script when running an svn commit.
if [[ "$1" == "ci" ]] || [[ "$1" == "commit" ]] || [[ "$1" == "add" ]];
then
    command svn "$@";
    return;
fi

# For 'svn log' and 'svn diff' pipe output through colordiff
if [[ "x$1" == "xlog" ]];
then
    command svn "$@" -r 0:HEAD | colordiff;
    return;
fi
if [[ "x$1" == "xdiff" ]];
then
    command svn "$@" | colordiff;
    return;
fi


# Pipe svn through awk to colorize its output.
command svn "$@" | awk '
BEGIN {
cpt_c=0;
}
{
    if ($1=="C") {
        cpt_c=cpt_c+1;
        print "\033[31m" $0 "\033[00m"; # Conflicts are displayed in red
    }
else if ($1=="M") {
    print "\033[31m" $0 "\033[00m"; # Modified in red
}
else if ($1=="A") {
    print "\033[32m" $0 "\033[00m"; # Add in green
}
else if ($1=="?") {
    print "\033[36m" $0 "\033[00m"; # New in cyan
}
else if ($1=="D") {
    print "\033[31m" $0 "\033[00m"; # Delete in red
}
else if ($1=="U") {
    print "\033[35m" $0 "\033[00m"; # Updated in light magenta
}
else if ($1=="X") {
    print "\033[33m" $0 "\033[00m"; # No changes in yellow.
}
else if ($1=="At" || $1 == "External") {
    print "\033[33m" $0 "\033[00m"; # Revision numbers in brown.
}
else {
    print $0; # No color, just print the line
}
}
END {
print cpt_c, " conflicts are found.";
}';
}
